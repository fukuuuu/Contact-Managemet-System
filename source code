#include<stdio.h>  // input/output
#include<conio.h> //console input
#include<string.h> // stricmp
#include<process.h>
#include<stdlib.h>
#include<dos.h>

struct contact
{
    char ph[11]; // 11 characters because the 11th char is for "NULL"
    char name[50], add[100], email[100];
} list;

char query[20], name[20];
FILE *fp, *ft;
int i, n, ch, l, found; // you will find 2 founds in this project

int main()
{
    system("cls"); //clear screen
    printf("\n\t **** Welcome to Contact Management System ****");
    
    main:  // start main menu
    printf("\n_________________________________________________________________");
    printf("\n\n\t\t\tMAIN MENU\n\t\t==========================");
    printf("\n\t\t[1] Add a new Contact\n\t\t[2] List all Contacts\n\t\t[3] Search for contact\n\t\t[4] Edit a Contact\n\t\t");
    printf("[5] Delete a Contact\n\t\t[0] Exit");
    printf("\n\t\t==========================\n\t\t");
    printf("\n_________________________________________________________________");
    printf("\n\nEnter the choice:");

    scanf("%d", &ch);

    switch(ch)
    {
        case 0:
            printf("\n\n\t\tAre you sure you want to exit?\n");
            break;
            
        case 1:  // add a new contact by appending new datas into the same file(contact)
            system("cls");
            fp=fopen("contact.dll", "a"); //append file contact.dll
            for (;;)  // infinite loop
            {
                fflush(stdin);  // flush the the previous input whetther from inside or outside from the loop
                printf("To exit enter blank space in the name input\nName (Use identical):");
                scanf("%[^\n]", list.name);

                if(stricmp(list.name, " ")==0)  // string compare if string == " ", break, == means true
                    break;

                fflush(stdin);  
                printf("Phone:");
                scanf("%[^\n]", list.ph);

                fflush(stdin);
                printf("address:");
                scanf("%[^\n]", list.add);

                fflush(stdin);
                printf("email address:");
                gets(list.email);

                printf("\n");
                fwrite(&list, sizeof(list), 1, fp); // fwrite(&var, size, n, fp)

            }
            fclose(fp);
            break;

        case 2:  // list all contacts alphabetically
            system("cls");
            printf("\n\t\t================================\n\t\t\tLIST OF CONTACTS\n\t\t================================\n\n");
            printf("Name\t\tPhone No\t    Address\t\tE-mail ad.\n=================================================================\n\n");
            for(i=97; i<=122; i=i+1)  // loop to print alphabetically starts form 'a'
            {
                fp=fopen("contact.dll", "r");
                fflush(stdin);
                found=0;  // tells how many datas starting with the same letter (starts with 0)

                while(fread(&list, sizeof(list), 1, fp)==1) // read till end of file, (if sizeof the file == 1 byte do, if not break)
                {                  
                    if(list.name[0]==i || list.name[0]==i-32) // print alphabetically
                    {
                        printf("\nName\t: %s\nPhone\t: %s\nAddress\t: %s\nEmail\t: %s\n", list.name, list.ph, list.add, list.email);
                        found++;
                    }
                }

                if(found!=0)
                {                                                          
                    printf("=========================================================== [%c]-(%d)\n\n", i-32, found);
                }
                fclose(fp);
            }
            break;
            
        case 3:
            system("cls");

            do
            {
                found=0;
                printf("\n\n\t..::CONTACT SEARCH\n\t===========================\n\t..::Name of contact to search: ");
                fflush(stdin);
                scanf("%[^\n]", &query);

                l=strlen(query);
                fp=fopen("contact.dll","r");
                system("cls");
                printf("\n\n..::Search result for '%s' \n===================================================\n",query);

                while(fread(&list,sizeof(list),1,fp)==1)
                {
                    for(i=0; i<=l; i++)
                        name[i]=list.name[i];

                    name[l]='\0';

                    if(stricmp(name,query)==0)
                    {
                        printf("\n..::Name\t: %s\n..::Phone\t: %ld\n..::Address\t: %s\n..::Email\t: %s\n",list.name,list.ph,list.add,list.email);
                        found++;

                        if (found%4==0)
                        {
                            printf("..::Press any key to continue...");
                            getch();
                        }
                    }
                }
                
                if(found==0)
                    printf("\n..::No match found!");
                else
                    printf("\n..::%d match(s) found!",found);

                fclose(fp);
                printf("\n ..::Try again?\n\n\t[1] Yes\t\t[0] No\n\t");
                scanf("%d",&ch);
             
            } while(ch==1);
            break;
   
        case 4: // the principle of this case is; 1st I check if the in put is the same with some data in the file, if the latter and the former
        system("cls"); // is not similar, so I kinda write it on temp(orary) file and so on, and then delete the old contact file, and rename temp
        fp=fopen("contact.dll", "r"); // file to contact, in short im not rewriting the file but create a new one instead
        ft=fopen("temp.dat", "w");
        fflush(stdin);

        printf("..::Edit contact\n===============================\n\n\t..::Enter the name of contact to edit:");
        scanf("%[^\n]", name);

        while(fread(&list, sizeof(list), 1, fp)==1) // while not EOF
        {
            if(stricmp(name, list.name)!=0)  // check if the str are similar or not, if they are
                fwrite(&list, sizeof(list), 1, ft);  // write it in the temp file
        }

        fflush(stdin); // these are the the normal input
        printf("\n\n..::Editing '%s'\n\n",name);
        printf("..::Name(Use identical):");
        scanf("%[^\n]", list.name);

        fflush(stdin);
        printf("..::Phone:");
        scanf("%[^\n]", list.ph);

        fflush(stdin);
        printf("..::address:");
        scanf("%[^\n]", list.add);
        
        fflush(stdin);
        printf("..::email address:");
        gets(list.email);
        printf("\n");
        fwrite(&list, sizeof(list), 1, ft);
        fclose(fp);
        fclose(ft);

        remove("contact.dll"); // remove the old contact file
        rename("temp.dat","contact.dll"); // create the new one
        break;
        
        case 5:
            system("cls");       
            fflush(stdin);
            printf("\n\n\t..::DELETE A CONTACT\n\t==========================\n\t..::Enter the name of contact to delete:");
            scanf("%[^\n]",&name);
            
            fp=fopen("contact.dll","r");
            ft=fopen("temp.dat","w");
            
            while(fread(&list,sizeof(list),1,fp)!=0)
               if (stricmp(name,list.name)!=0)
                   fwrite(&list,sizeof(list),1,ft);
            
            fclose(fp);
            fclose(ft);
            remove("contact.dll");
            rename("temp.dat","contact.dll");
            break;
         
         default:
            printf("Invalid choice");
            break;

    }

    main2: // secondary main
    printf("\n\n\t\t  ..::Enter the Choice::..\n\n\t\t[1] Main Menu\t    [0] Exit\n");
    scanf("%d", &ch);

    switch (ch)
    {
        case 0:
            printf("Exit the program\n");
            break;

            default:
                printf("Invalid choice, Please choose only [0] or [1]\n");
                goto main2;
        case 1:
            system("cls");
            goto main;      
    }
    return 0;
}
